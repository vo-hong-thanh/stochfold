/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package constants;

/**
 *
 * @author vot2
 */
public interface ENERGY_CONSTANTS {
    public final static double INF = Double.MAX_VALUE;
    public final static double lxc37 = 1.07856; //= 107.856 / 100;
    
    public final static int PAIRING_CONSTRAINT = 3; //constrant on the number of nucleotides in MULTILOOP_A hairpin 
    public final static double GAS_CONSTANT = 1.98717E-3; // kcal/Kelvin
    
    public final static double K0 = 273.15; //Kelvin constant
    public final static double T = K0 + 37; //temperature in kelvin
    
    //AU end
    public final static double AU_end = 0.45;
                
    //GU end
    public final static double GU_end = 0.45;
    
    //dangling end 
                                                  /*X -> */
    public static double[][] dangling_3  = {      /*  A     C     G     U   */  
                                           /*AU*/ { -0.8, -0.5, -0.8, -0.6  },
                                           /*CG*/ { -1.7, -0.8, -1.7, -1.2  },  
                                           /*GC*/ { -1.1, -0.4, -1.3, -0.6  },
                                           /*GU*/ { -0.8, -0.5, -0.8, -0.6  },
                                           /*UA*/ { -0.7, -0.1, -0.7, -0.1  },
                                           /*UG*/ { -0.7, -0.1, -0.7, -0.1  }
                                           };
    
                                                  /*X -> */
    public static double[][] dangling_5  = {      /*  A     C     G     U   */  
                                           /*AU*/ { -0.3, -0.1, -0.2, -0.2  },
                                           /*CG*/ { -0.2, -0.3,  0.0,  0.0  },  
                                           /*GC*/ { -0.5, -0.3, -0.2, -0.1  },
                                           /*GU*/ { -0.3, -0.1, -0.2, -0.2  },
                                           /*UA*/ { -0.3, -0.3, -0.4, -0.2  },
                                           /*UG*/ { -0.3, -0.3, -0.4, -0.2  }
                                           };
    //terminal mismatch 
    public static double[][] terminal_mismatch = {
               /*XY -> */
              /* AA    AC    AG    AU    CA    CC    CG    CU    GA    GC    GG    GU    UA    UC    UG    UU   */  
       /*AU*/ { -0.8, -1.0, -0.8, -0.4, -0.6, -0.7, -1.7, -0.7, -0.8, -1.6, -0.8, -0.1, -0.6, -0.8, -0.9, -0.8  },
       /*CG*/ { -1.5, -1.5, -1.4, -1.6, -1.0, -1.1, -2.8, -0.8, -1.4, -1.9, -1.6, -0.9, -1.6, -1.4, -1.6, -1.2  },  
       /*GC*/ { -1.1, -1.5, -1.3, -1.9, -1.1, -0.7, -2.9, -0.5, -1.6, -2.8, -1.4, -1.0, -1.7, -1.0, -2.0, -0.7  },
       /*GU*/ { -0.3, -1.0, -0.8, -0.8, -0.6, -0.7, -2.0, -0.7, -0.6, -1.6, -0.8,  0.0, -0.9, -0.8,  1.8, -0.8  },
       /*UA*/ { -1.0, -0.8, -1.1, -0.8, -0.7, -0.6, -1.9, -0.5, -1.1, -1.6, -1.2, -0.5, -0.4, -0.6, -0.8, -0.5  },
       /*UG*/ { -1.0, -0.8, -1.1, -0.5, -0.7, -0.6, -1.0, -0.5, -0.5, -0.9, -0.8, -0.8, -0.1, -0.6,  0.0, -0.5  }
                                        };
        
    //stack
                                              /*(p, q) -> */
    public static double[][] stack = {        /* CG      GC      GU      UG      AU     UA   */  
                        /*(i, j)*/      /*CG*/ { -3.26,  -2.36,  -1.41,  -2.11,  -2.11,  -2.08  },
                        /* |  */        /*GC*/ { -3.42,  -3.26,  -1.53,  -2.51,  -2.35,  -2.24  },  
                        /* v  */        /*GU*/ { -2.51,  -2.11,   0.47,   1.29,  -1.27,  -1.36  },
                                        /*UG*/ { -1.53,  -1.41,   0.30,   0.47,  -1.00,  -0.55  },
                                        /*AU*/ { -2.24,  -2.08,  -0.55,  -1.36,  -0.93,  -1.10  },
                                        /*UA*/ { -2.35,  -2.11,  -1.00,  -1.27,  -1.33,  -0.93  }
                                        };
    
    //special stack - GC followed by GU then UG and CG
    public static double specialStack_GGUC_CUGG = -4.12;
       
    //loop size
    public final static int MAXLOOP = 30;   
    
    
    //hairpin
    public final static double UU_GA_First_Mismatch_Hairpin = -0.8;
    public final static double GU_Closure_Hairpin = -2.2;
    
    public final static double ALL_C_3 = 1.4;
    public final static double ALL_C_LOOP_A = 0.3;
    public final static double ALL_C_LOOP_B = 1.6;    
    
    public final static double[] hairpin = { INF, INF, INF, 5.70, 5.60, 5.60, 5.40, 5.90, 5.60, 6.40, 6.50,
                                               6.60, 6.70, 6.78, 6.86, 6.94, 7.01, 7.07, 7.13, 7.19, 7.25,
                                               7.30, 7.35, 7.40, 7.44, 7.49, 7.53, 7.57, 7.61, 7.65, 7.69
                                             };    
                                                 
    public static double[] tetraloop_bonus = {
                                                /*GGGGAC*/ -3.0, /*GGUGAC*/ -3.0, /*CGAAAG*/ -3.0, /*GGAGAC*/ -3.0, /*CGCAAG*/ -3.0, /*GGAAAC*/ -3.0,		
                                                /*CGGAAG*/ -3.0, /*CUUCGG*/ -3.0, /*CGUGAG*/ -3.0, /*CGAAGG*/ -2.5, /*CUACGG*/ -2.5, /*GGCAAC*/ -2.5,	
                                                /*CGCGAG*/ -2.5, /*UGAGAG*/ -2.5, /*CGAGAG*/ -2.0, /*AGAAAU*/ -2.0, /*CGUAAG*/ -2.0, /*CUAACG*/ -2.0,		
                                                /*UGAAAG*/ -2.0, /*GGAAGC*/ -1.5, /*GGGAAC*/ -1.5, /*UGAAAA*/ -1.5, /*AGCAAU*/ -1.5, /*AGUAAU*/ -1.5,	
                                                /*CGGGAG*/ -1.5, /*AGUGAU*/ -1.5, /*GGCGAC*/ -1.5, /*GGGAGC*/ -1.5, /*GUGAAC*/ -1.5, /*UGGAAA*/ -1.5
                                            };
        
    //bulge
    public final static double[] bulge = { INF, 3.80, 2.80, 3.20, 3.60, 4.00, 4.40, 4.59, 4.70, 4.80, 4.90, 
                                             5.00, 5.10, 5.19, 5.27, 5.34, 5.41, 5.48, 5.54, 5.60, 5.65, 5.71,
                                             5.76, 5.80, 5.85, 5.89, 5.94, 5.98, 6.02, 6.05, 6.09
                                           };
    
    //internal loop
    public final static double[] internal_loop = { INF, INF, 4.10, 5.10, 1.70, 1.80, 2.00, 2.20, 2.30, 2.40, 2.50,
                                                     2.60, 2.70, 2.78, 2.86, 2.94, 3.01, 3.07, 3.13, 3.19, 3.25,
                                                     3.30, 3.35, 3.40, 3.45, 3.49, 3.53, 3.57, 3.61, 3.65, 3.69
                                                  };
    
    public final static double ASSYMETRY = 0.48;
    public final static double AU_GU_Closure_Internal = 0.65;
    public final static double GA_AG_First_Mismatch_Internal = -1.1;
    public final static double UU_First_Mismatch_Internal = -0.7;
                                                                /* AA    AC    AG    AU   */ 
    public final static double[][] internal_loop_11 = {
                 /* AA    AC    AG    AU    CA    CC    CG    CU    GA    GC    GG    GU    UA    UC    UG    UU   */  
      /*AU-AU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.5  },
      /*AU-CG*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.0  },
      /*AU-GC*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*AU-UA*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.2  },
      /*AU-GU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*AU-UG*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      
      /*CG-AU*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*CG-CG*/ {  0.4, -0.4,  0.4,  0.4,  0.3,  0.5,  0.4,  0.5, -0.1,  0.4, -1.7,  0.4,  0.4,  0.0,  0.4, -0.3  },
      /*CG-GC*/ {  1.1,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4, -1.4,  0.4,  0.4,  0.4,  0.4,  0.4  },
      /*CG-UA*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*CG-GU*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*CG-UG*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      
      /*GC-AU*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*GC-CG*/ {  0.8,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4,  0.4, -2.1,  0.4,  0.4,  0.4,  0.4, -0.7  },
      /*GC-GC*/ {  0.4,  0.3, -0.1,  0.4, -0.4,  0.5,  0.4,  0.0,  0.4,  0.4, -1.7,  0.4,  0.4,  0.5,  0.4, -0.3  },
      /*GC-UA*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.0  },
      /*GC-GU*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*GC-UG*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      
      /*UA-AU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.8  },
      /*UA-CG*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*UA-GC*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*UA-UA*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.5  },
      /*UA-GU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*UA-UG*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      
      /*GU-AU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*GU-CG*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*GU-GC*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*GU-UA*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*GU-GU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*GU-UG*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      
      /*UG-AU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*UG-CG*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*UG-GC*/ {  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1,  1.1, -1.0,  1.1,  1.1,  1.1,  1.1,  1.1  },
      /*UG-UA*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*UG-GU*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  },
      /*UG-UG*/ {  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7,  1.7, -0.4,  1.7,  1.7,  1.7,  1.7,  1.7  }  
    };
        
    //multilopp constant
    public final static double MULTILOOP_A = 10.1;
    public final static double MULTILOOP_B = -0.3;
    public final static double MULTILOOP_C = -0.3;    
}
